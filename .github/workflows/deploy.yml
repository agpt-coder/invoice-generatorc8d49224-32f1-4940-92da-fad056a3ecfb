name: cloudrun-deploy
#on:
#  push:
#    branches:
#      - master
on: workflow_dispatch
jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@master

      # Set up auth service account with Credentials
    - name: Set up auth service account
      uses: google-github-actions/auth@v2
      with:
        credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

    # Setup gcloud CLI
    - name: Set up gcloud
      uses: google-github-actions/setup-gcloud@v2
      with:
        service_account_email: ${{ secrets.GCP_EMAIL }}
        service_account_key: ${{ secrets.GCP_CREDENTIALS }}
        export_default_credentials: true

    # Configure Docker with Credentials
    - name: Configure Docker
      run: |
        gcloud auth configure-docker
    
    - name: Authenticate to Google Cloud 
      uses: google-github-actions/auth@v1
      with:
        token_format: 'access_token'
        create_credentials_file: 'true'
        service_account: ${{ secrets.GCP_EMAIL }}
        credentials_json: ${{ secrets.GCP_CREDENTIALS }}

    - name: Install Cloud SQL Proxy
      run: |
        wget https://dl.google.com/cloudsql/cloud_sql_proxy.linux.amd64 -O cloud_sql_proxy
        chmod +x cloud_sql_proxy

    - name: Start Cloud SQL Proxy
      run: |
        ./cloud_sql_proxy -instances=${{ secrets.CLOUD_SQL_CONNECTION_NAME }}=tcp:5432 &
        sleep 10  # Wait for the Cloud SQL Proxy to be fully ready
    
    - name: Run Migrations
      run: |
        echo "Connecting to PostgreSQL at localhost:5432 with DB name ${{ secrets.DB_NAME }}"
        export DATABASE_URL="postgresql://${{ secrets.DB_USER }}:${{ secrets.DB_PASS }}@localhost:5432/${{ secrets.DB_NAME }}"
        npm install prisma -g
        prisma migrate deploy
      env:
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASS: ${{ secrets.DB_PASS }}
        DB_NAME: ${{ secrets.DB_NAME }}

    # Build the Docker image
    - name: Build & Publish
      run: |
        # Set the Google Cloud project
        gcloud config set project ${{ secrets.GCP_PROJECT }}
        
        REPO_NAME="${{ github.repository }}"
        REPO_NAME="${REPO_NAME//\//_}"  # Replace '/' with '_'
        REPO_NAME="${REPO_NAME,,}"  

        IMAGE_TAG="gcr.io/${{ secrets.GCP_PROJECT }}/${REPO_NAME}:${GITHUB_RUN_NUMBER}"
    
        # Submit the build to Google Cloud Build
        gcloud builds submit --tag $IMAGE_TAG --verbosity=debug
    
        # Set the default region for Google Cloud Run deployments
        gcloud config set run/region us-central1
      env:
        GCP_PROJECT: ${{ secrets.GCP_PROJECT }}
        GITHUB_RUN_NUMBER: ${{ github.run_number }}


    - name: Deploy to Google Cloud Run
      run: |
        REPO_NAME="${{ github.repository }}"
        REPO_NAME="${REPO_NAME//\//_}" 
        REPO_NAME="${REPO_NAME,,}"  
        IMAGE_NAME="gcr.io/${{ secrets.GCP_PROJECT }}/${REPO_NAME}_${{ github.run_number }}"
        
        gcloud run deploy ${REPO_NAME}_${{ github.run_number }} \
          --image $IMAGE_NAME \
          --platform managed \
          --allow-unauthenticated \
          --memory 512M \
          --add-cloudsql-instances ${{ secrets.CLOUD_SQL_CONNECTION_NAME }} \
          --set-env-vars=DATABASE_URL=postgresql://${{ secrets.DB_USER }}:${{ secrets.DB_PASS }}@${{ secrets.DB_HOST }}:5432/${{ secrets.DB_NAME }}, \
                            INSTANCE_CONNECTION_NAME=${{ secrets.CLOUD_SQL_CONNECTION_NAME }}
      env:
        GCP_PROJECT: ${{ secrets.GCP_PROJECT }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASS: ${{ secrets.DB_PASS }}
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_NAME: ${{ secrets.DB_NAME }}
